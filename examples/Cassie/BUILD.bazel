load("@drake//tools:drake.bzl", "drake_cc_googletest", "drake_cc_library", "drake_cc_binary")
load("@drake//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

load(
    "@drake//tools/skylark:drake_lcm.bzl",
    "drake_lcm_cc_library",
    "drake_lcm_java_library",
    "drake_lcm_py_library",
)

load(
    "@drake//tools/skylark:pybind.bzl",
    "drake_pybind_library",
    "get_drake_py_installs",
    "get_pybind_package_info",
    "pybind_py_library"
)

load(
    "@drake//tools/skylark:drake_py.bzl",
    "drake_py_binary",
    "drake_py_library",
    "drake_py_unittest",
)

py_test(
    name = "test_cassie_utils",
    srcs = ["test_cassie_utils.py"],
    deps = [":cassie_utils_py"],
    data = glob(["urdf/**"]),

cc_library(
  name = "cassie_utils",
  srcs = ["cassie_utils.cc"],
  hdrs = ["cassie_utils.h"],
  deps = ["@drake//solvers:mathematical_program",
          "@drake//solvers:constraint",
          "@drake//multibody:rigid_body_tree",
          "@drake//manipulation/util",
          "//common"]
)

#py_test(
#    name = "test_trajectory_sim",
#    srcs = ["test_trajectory_sim.py"],
#    deps = [":run_trajectory_sim_py"],
#)

cc_library(
    name = "run_trajectory_sim",
    srcs = ["run_trajectory_sim.cc"],
    hdrs = ["run_trajectory_sim.h"],
    deps = [
        "@drake//multibody:rigid_body_tree",
        "@drake//systems/analysis:simulator",
        "@drake//manipulation/util",
        "@drake//systems/framework",
        "@drake//systems/primitives",
        "@drake//common",
        "@drake//solvers",
        "@gflags",
        ":cassie_urdf",
        ":cassie_utils",
    ],
)

cc_library(
  name = "cassie_urdf",
  data = glob(["urdf/**"]),
)

cc_library(
	name = "polling_interface",
	hdrs = [":polling_interface.h"]
)

cc_library(
	name = "silent_interface",
	hdrs = [":silent_interface.h"]
)

<<<<<<< HEAD
pybind_py_library(
    name = "run_trajectory_sim_py",
    cc_so_name = "run_trajectory_sim",
    cc_srcs = ["run_trajectory_sim_py.cc"],
    cc_deps = [":run_trajectory_sim",               
               "@drake//bindings/pydrake/systems:systems_pybind",
               "@drake//bindings/pydrake/util:cpp_template_pybind",
               ],
    py_imports = ["."],
)

pybind_py_library(
    name = "cassie_utils_py",
    cc_so_name = "cassie_utils",
    cc_srcs = ["cassie_utils_py.cc"],
    cc_deps = [":cassie_utils",
               "@drake//bindings/pydrake/systems:systems_pybind",
               "@drake//bindings/pydrake/util:cpp_template_pybind",
               ],
    py_imports = ["."],
)

#cc_library(
#	name = "dispatcher",
#	hdrs = [":dispatcher.h"],
#	deps = [":polling_interface"]
#)

#cc_library(
#	name = "cassie_robot_dispatch_interface",
#	hdrs = [":cassie_robot_dispatch_interface.h"],
#	srcs = ["cassie_robot_dispatch_interface.cc"],
#	deps = [
#	        ":polling_interface",
#	        "//examples/Cassie/datatypes:cassie_dispatch_types"]
#)

#cc_library(
#	name = "cassie_lcm_dispatch_interface",
#	hdrs = [":cassie_lcm_dispatch_interface.h"],
#	srcs = ["cassie_lcm_dispatch_interface.cc"],
#	deps = [
#	        ":polling_interface",
#	        "//examples/Cassie/datatypes:cassie_dispatch_types",
#	        "@lcm",
#	        "@drake//systems/lcm:lcm",
#	        "@drake//systems/framework:value",
#	        "@drake//lcmtypes:drake_signal",
#	        ]
#)

#cc_library(
#	name = "cassie_dispatcher",
#	hdrs = [":cassie_dispatcher.h"],
#	srcs = ["cassie_dispatcher.cc"],
#	deps = [
#	        ":polling_interface",
#	        ":dispatcher",
#	        "//examples/Cassie/datatypes:cassie_names",
#	        "//examples/Cassie/datatypes:cassie_dispatch_types"]
#)

#cc_binary(
#	name = "run_cassie_dispatch",
#	srcs = ["run_cassie_dispatch.cc"],
#	deps = [
#	        ":cassie_dispatcher",
#	        ":cassie_robot_dispatch_interface",
#	        ":cassie_lcm_dispatch_interface",
#	        ":silent_interface",
#	        "//examples/Cassie/datatypes:cassie_dispatch_types",
#	        "//examples/Cassie/datatypes:cassie_networking",
#	        "//examples/Cassie/datatypes:cassie_names",
#	        "@drake//systems/lcm:lcm"
#	        ]
#)
=======
cc_library(
	name = "cassie_udp_spoofer",
	hdrs = [":cassie_udp_spoofer.h"],
	srcs = ["cassie_udp_spoofer.cc"],
	deps = [
	        ":polling_interface",
	        "//examples/Cassie/datatypes:cassie_dispatch_types"
	        ]
)



cc_library(
	name = "cassie_udp_systems",
	hdrs = [":cassie_udp_systems.h"],
	srcs = ["cassie_udp_systems.cc"],
	deps = [
	        "@drake//systems/framework",
	        "@drake//systems/lcm",
	        ":cassie_udp_spoofer",
	        "//examples/Cassie/datatypes:cassie_dispatch_types",
	        "//examples/Cassie/datatypes:cassie_names"
	        ]
)


cc_binary(
    name = "run_udp_sim",
    srcs = ["run_udp_sim.cc"],
    deps = [
        "@drake//multibody:rigid_body_tree",
        "@drake//systems/analysis:simulator",
        "@drake//manipulation/util",
        "@drake//systems/framework",
        "@drake//common",
        "@drake//solvers",
        "@drake//lcm",
        "@gflags",
        ":cassie_urdf",
        "//systems:robot_lcm_systems",
        "//systems/primitives",
        ":cassie_udp_systems",
        ":cassie_udp_spoofer",
        "//examples/Cassie/datatypes:cassie_networking"
    ],
)




cc_binary(
	name = "run_cassie_dispatch",
	srcs = ["run_cassie_dispatch.cc"],
	deps = [
	        ":cassie_dispatcher",
	        ":cassie_robot_dispatch_interface",
	        ":cassie_lcm_dispatch_interface",
	        ":silent_interface",
	        "//examples/Cassie/datatypes:cassie_dispatch_types",
	        "//examples/Cassie/datatypes:cassie_networking",
	        "//examples/Cassie/datatypes:cassie_names",
	        "@drake//systems/lcm:lcm"
	        ]
)

>>>>>>> da6c1b67181016869921efcfa98e6aee78b5c4f4

cc_binary(
	name = "run_udp_dummy_server",
	srcs = ["run_udp_dummy_server.c"],
	deps = [
	        "//examples/Cassie/datatypes:cassie_networking",
	        "//examples/Cassie/datatypes:cassie_out_t",
	        "//examples/Cassie/datatypes:cassie_user_in_t"
	        ]
)



cc_binary(
    name = "run_pd_controller",
    srcs = ["run_pd_controller.cc"],
    deps = [
            "//systems:robot_lcm_systems",
            "//systems/controllers",
            "//systems/controllers:pd_config_lcm",
            "@drake//systems/framework:diagram_builder",
            "@drake//systems/lcm:lcm_pubsub_system",
            "@drake//systems/analysis:simulator",
            "@drake//multibody:rigid_body_tree",
            "@drake//manipulation/util",
            "@drake//lcm",
            ":cassie_utils",
            ":cassie_urdf",
            ]
)

cc_binary(
    name = "cassie_state_visualizer",
    srcs = ["cassie_state_visualizer.cc"],
    deps = [
            "//systems:robot_lcm_systems",
            "//systems/primitives",
            ":cassie_urdf",
            "@drake//systems/framework:diagram_builder",
            "@drake//systems/lcm:lcm_pubsub_system",
            "@drake//systems/analysis:simulator",
            "@drake//lcm",
            "@drake//multibody:rigid_body_tree",
            "@drake//manipulation/util",
            ":cassie_utils"
            ]
)

cc_binary(
    name = "run_simple_sim",
    srcs = ["run_simple_sim.cc"],
    deps = [
        "@drake//multibody:rigid_body_tree",
        "@drake//systems/analysis:simulator",
        "@drake//manipulation/util",
        "@drake//systems/framework",
        "@drake//common",
        "@drake//solvers",
        "@drake//lcm",
        "@gflags",
        ":cassie_urdf",
        "//systems:robot_lcm_systems",
        "//systems/primitives",
        ":cassie_utils",
    ],
)

py_binary(
    name = "draw_graphviz",
    srcs = ["draw_graphviz.py"],
    deps = [
        "@drake//bindings/pydrake",
    ],
<<<<<<< HEAD
)
=======
)

cc_binary(
    name = "parse_log_test",
    srcs = ["test/parse_log_test.cc"],
    deps = [
            "//systems:robot_lcm_systems",
            ":cassie_urdf",
            "@drake//systems/framework:diagram_builder",
            "@drake//systems/lcm:lcm_pubsub_system",
            "@drake//systems/analysis:simulator",
            "@drake//lcm",
            "@drake//multibody:rigid_body_tree",
            "//systems/lcm:lcm_log_parser",
            ":cassie_utils"
            ]
)
>>>>>>> da6c1b67181016869921efcfa98e6aee78b5c4f4

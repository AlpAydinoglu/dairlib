load("@drake//tools:drake.bzl", "drake_cc_googletest", "drake_cc_library", "drake_cc_binary")
load("@drake//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "pd_config_lcm",
    srcs = ["pd_config_lcm.cc"],
    hdrs = ["pd_config_lcm.h"],
    deps = [
            "@drake//manipulation/util",
            "@drake//systems/framework:leaf_system",
            "@lcm",
            "//multibody:utils",
            "//lcmtypes:lcmt_robot",
            "//systems/framework:vector",
            ":controllers"
            ]
)

cc_library(
    name = "controllers",
    srcs = ["linear_controller.cc",],
    hdrs = ["linear_controller.h"],
    deps = [
            "//systems/framework:vector",
            "@drake//systems/framework:leaf_system",
            ]
)

cc_library(
    name = "affine_controller",
    srcs = ["affine_controller.cc",],
    hdrs = ["affine_controller.h"],
    deps = [
            "//systems/framework:vector",
            "@drake//systems/framework:leaf_system",
	    ":controllers"
            ]
)


cc_library(
    name = "mpc_controllers",
    srcs = ["mpc_balance_controller.cc",],
    hdrs = ["mpc_balance_controller.h"],
    deps = [
            "//systems/framework:vector",
            "@drake//systems/framework:leaf_system",
	    ":admmlib",
            "@drake//multibody:rigid_body_tree",
	    "@drake//math:autodiff",
	    "@drake//systems/controllers:control_util",
	    "@gurobi//:gurobi_cxx"
            ]
)

cc_library(
    name = "auto_jaco_mpc_controllers",
    srcs = ["auto_jacobian_mpc_balance_controller.cc",],
    hdrs = ["auto_jacobian_mpc_balance_controller.h"],
    deps = [
            "//systems/framework:vector",
            "@drake//systems/framework:leaf_system",
	    ":admmlib",
            "@drake//multibody:rigid_body_tree",
	    "@drake//math:autodiff",
	    "@drake//systems/controllers:control_util",
	    "@gurobi//:gurobi_cxx"
            ]
)


cc_library(
    name = "admmlib",
    srcs = ["admmsolve.cc"],
    hdrs = ["admmsolve.h"],
    deps = [
	"@gurobi//:gurobi_cxx",
	"@eigen",
	"@drake//solvers:gurobi_solver",
        "@drake//solvers:mathematical_program"],
)


cc_test(
    name = "pd_config_lcm_test",
    srcs = ["test/pd_config_lcm_test.cc"],
    deps = [
            ":pd_config_lcm",
            "//examples/Cassie:cassie_urdf",
            "@drake//multibody:rigid_body_tree",
            "@drake//multibody/parsers",
            "@drake//manipulation/util",
            "@gtest//:main",
            "@drake//systems/framework/test_utilities",
            ],
    size = "small"
)
